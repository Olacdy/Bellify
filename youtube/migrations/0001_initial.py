# Generated by Django 3.2.13 on 2022-05-02 23:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('telegram_bot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='YoutubeChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('channel_id', models.CharField(max_length=200, unique=True)),
                ('channel_url', models.URLField(blank=True, null=True, unique=True)),
                ('video_title', models.CharField(blank=True, max_length=200, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('live_title', models.CharField(blank=True, max_length=200, null=True)),
                ('live_url', models.URLField(blank=True, null=True)),
                ('is_live', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name': 'Youtube Channel',
                'verbose_name_plural': 'Youtube Channels',
            },
        ),
        migrations.CreateModel(
            name='YoutubeChannelUserItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_title', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('is_muted', models.BooleanField(blank=True, default=False, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='youtube.youtubechannel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='telegram_bot.user')),
            ],
        ),
        migrations.AddField(
            model_name='youtubechannel',
            name='users',
            field=models.ManyToManyField(through='youtube.YoutubeChannelUserItem', to='telegram_bot.User'),
        ),
    ]
